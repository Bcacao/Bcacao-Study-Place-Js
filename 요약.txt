변수 이름 변경
f2를 눌러 한꺼번에 변경 가능

콘솔 출력
console.log();

팝업 입력
prompt(); 문자열로 받아들임

팝업 출력
alert();

변수타입확인
console.log(typeof 변수이름);

백틱사용
`${변수명}`

일치 비교 연산자(값과 타입이 같음)
===
불일치 비교 연산자(값과 타입이 다름)
!==

할당연산자
x+=5는 x=x+5와 같다

삼항연산자
var 변수명1 = 조건식 ? true일때 반환값 : false일때 반환값;
삼항연산자는 분기가 하나일 경우에 쓰는게 좋다 
분기가 많을 경우 else if 가 좋다 

난수 공식
공식:  x이상 y이하의 정수 난수
Math.floor(Math.random() * (y - x + 1)) + x

while 공식
var n = 1; // 제어변수 (초기값: begin)
while (n <= 100) { // 조건식 (끝값: end)
    // 반복코드
    n++; // 증감식 (단계: step)
}

반복문 조건으로 점프하기
continue;
라벨을 줘서 활용 가능(검색필요) 

반복문 나오기
break;

for문의 무한루프
for(;;){
}

confirm();
팝업창이 뜨며 확인 취소를 클릭할 수 있다
스트링을 입력값으로 적고
리턴값은 블리언이다

Falsy값
0, '', null, undefined, NaN 거짓으로 판단함 

문자형변환
String(변수명)
변수명.toString()
''+변수명

숫자형변환
Number(변수명)
+변수명 
ex!! +prompt

불리언형변환
Boolean()
!!

undefined : 선언은 되었으나 값이 할당 되지 않은 상태 (초기화 안하면 무조건 undefined 상태)
null : 아무런 값도 나타내지 않는 특수한 값 (초기화 해주어야 null 상태가 존재 할 수 있음)
NaN : JS에서만 존재하는 '숫자가 아니다'를 의미하는 값

단축평가
true || anyting : true
false || anyting : anything
true && anyting : anything
false && anyting : false

변수 저장
변수는 메모리상에서
스택이라는 공간에 할당 되어진다 
빨리 쓰이기 위해 스택은 작은 공간이다 
한 공간에 하나씩 변수가 저장되어 진다 

배열은 큰 공간이 필요하기 떄문에 
메모리상의 큰 공간에 할당되고 
스팩에 그 주소를 적어놔 참조형태로 쓰인다 

배열에서 변수 선언 
보통 복수형으로 이름을 짖거나
어미에 list를 붙인다

배열선언
var 변수명 = ['저장값','저장값',]; 

배열타입
배열은 객체이다 웹으로 보면 프로토타입 어레이로 되어 있고 유사배열에링 구분이 필요하다 

배열길이
변수명.length

배열 보는법
변수명[인덱스]
변수명[변수명.length-1] 변수의 인덱스를 모를경우 맨 마지막 배열 부르기

배열추가
변수명[끝 다음 인덱스]=값;
자바의 경우 안되지만 js에서는 가능

배열순회
 for (i=0; i<fruits.length; i++){
    console.log(fruits[i]);
    }

배열전용 반복문
for (var 저장할변수명2 of 배열변수명1){
    실행문3
}
①번에서 배열에서 첫번째 값을 가져온 후 ②번의 변수에 저장한 후 ③을 실
행하는 것을 배열의 항목 개수만큼 반복합니다.

배열 push
변수명.push();
배열 끝에 요소를 추가

배열 pop
변수명.pop();
배열의 끝에 요소를 제거하고, 제거한 요소 반환

배열 shift
변수명.shift();
배열의 첫번쨰 요소를 제거하고, 제거한 요소를 반환

변수명.unshift();
배열 unshift();
배열의 첫번째 요소를 추가

배열 shift와 unshift는 인덱스를 다 바꿔줘야 되기 떄문에 잘 사용 안함\

기타 배열 메서드 

indexOF(); 배열의 특정 데이터가 몇번 인덱스에 있는지 리턴
없으면 -1을 리턴

slice(); 배열을 복사
입력값에 처음인덱스,끝인덱스를 주면
처음이상 끝미만 사이의 배열을 복사
하나만 주면 이상 다 줌


reverse(); 배열을 역순으로 배치 원본이 변함
왠만하면 slice로 복사해서 사용

includes('배열리터럴'); 배열에 해당 값이 포함 되어 있는지 확인
리턴은 불리언

splice(); 원본에 삭제 추가 가능 
첫번쨰 숫자는 기준점
두번째 숫자는 그 기분점부터의 삭제할 횟수
그 이후에 값들은 추가할값들





